/*
 * Copyright (C) Ericsson Mobile Communications AB, 2001.
 * Licensed to AU-System AB.
 * All rights reserved.
 *
 * This software is covered by the license agreement between
 * the end user and AU-System AB, and may be used and copied
 * only in accordance with the terms of the said agreement.
 *
 * Neither Ericsson Mobile Communications AB nor AU-System AB
 * assumes any responsibility or liability for any errors or inaccuracies in
 * this software, or any consequential, incidental or indirect damage arising
 * out of the use of the Generic WAP Client software.
 */

/* Program generated by SDT Cmicro, version 1.33 */

#ifndef XSCT_CMICRO
#define XSCT_CMICRO
#endif


/*************************************************************************
**                SECTION Types and Forward references                  **
*************************************************************************/
#define XPTID_z00008_WAE_ME 0
extern XCONST XPDTBL yPDTBL_z00008_WAE_ME;
#define XPTID_z00010F_UA_ME 1
extern XCONST XPDTBL yPDTBL_z00010F_UA_ME;
#define XPTID_z00010G_MMI_DISP 2
extern XCONST XPDTBL yPDTBL_z00010G_MMI_DISP;
#define XPTID_z00010H_MMI_AGNT 3
extern XCONST XPDTBL yPDTBL_z00010H_MMI_AGNT;
#define XPTID_z00010I_WML_UA 4
extern XCONST XPDTBL yPDTBL_z00010I_WML_UA;
#define XPTID_z00010J_PROV_UA 5
extern XCONST XPDTBL yPDTBL_z00010J_PROV_UA;
#define XPTID_z00010K_WTA_IF 6
extern XCONST XPDTBL yPDTBL_z00010K_WTA_IF;
#define XPTID_z00010L_CONT_UA 7
extern XCONST XPDTBL yPDTBL_z00010L_CONT_UA;
#define XPTID_z00024_WMLS_SM 8
extern XCONST XPDTBL yPDTBL_z00024_WMLS_SM;
#define XPTID_z00036_Push_ME 9
extern XCONST XPDTBL yPDTBL_z00036_Push_ME;
#define XPTID_z00037_Push_LL 10
extern XCONST XPDTBL yPDTBL_z00037_Push_LL;
#define XPTID_z000407_RepH_ME 11
extern XCONST XPDTBL yPDTBL_z000407_RepH_ME;
#define XPTID_z000408_RepH_Install 12
extern XCONST XPDTBL yPDTBL_z000408_RepH_Install;
#define XPTID_z000409_RepH_LL 13
extern XCONST XPDTBL yPDTBL_z000409_RepH_LL;
#define XPTID_z000508_RES_ME 14
extern XCONST XPDTBL yPDTBL_z000508_RES_ME;
#define XPTID_z000509_RES_CC 15
extern XCONST XPDTBL yPDTBL_z000509_RES_CC;
#define XPTID_z00050A_RES_FC 16
extern XCONST XPDTBL yPDTBL_z00050A_RES_FC;
#define XPTID_z000603_WSPIF_ST 17
extern XCONST XPDTBL yPDTBL_z000603_WSPIF_ST;
#define XPTID_z000604_WSPIF_SM 18
extern XCONST XPDTBL yPDTBL_z000604_WSPIF_SM;
#define XPTID_z000605_WSPIF_TR 19
extern XCONST XPDTBL yPDTBL_z000605_WSPIF_TR;
#define XPTID_z000606_WSPIF_DI 20
extern XCONST XPDTBL yPDTBL_z000606_WSPIF_DI;
#define XPTID_z17_StackCtrl 21
extern XCONST XPDTBL yPDTBL_z17_StackCtrl;
#define XPTID_z20B_ClientSession 22
extern XCONST XPDTBL yPDTBL_z20B_ClientSession;
#define XPTID_z20C_ClientMethod 23
extern XCONST XPDTBL yPDTBL_z20C_ClientMethod;
#define XPTID_z20D_ClientDispatcher 24
extern XCONST XPDTBL yPDTBL_z20D_ClientDispatcher;
#define XPTID_z20E_ClientPush 25
extern XCONST XPDTBL yPDTBL_z20E_ClientPush;
#define XPTID_z20F_WSP_ME 26
extern XCONST XPDTBL yPDTBL_z20F_WSP_ME;
#define XPTID_z20G_ConnectionLess 27
extern XCONST XPDTBL yPDTBL_z20G_ConnectionLess;
#define XPTID_z300A_TransactionManager 28
extern XCONST XPDTBL yPDTBL_z300A_TransactionManager;
#define XPTID_z300B_Initiator 29
extern XCONST XPDTBL yPDTBL_z300B_Initiator;
#define XPTID_z300C_Responder 30
extern XCONST XPDTBL yPDTBL_z300C_Responder;
#define XPTID_z3014_MEProcess 31
extern XCONST XPDTBL yPDTBL_z3014_MEProcess;
#define XPTID_z48_WTLS_CM 32
extern XCONST XPDTBL yPDTBL_z48_WTLS_CM;
#define XPTID_z49_WTLS_ME 33
extern XCONST XPDTBL yPDTBL_z49_WTLS_ME;
#define XPTID_z4A_WTLS_Main 34
extern XCONST XPDTBL yPDTBL_z4A_WTLS_Main;
#define XPTID_z4B_WTLS_Record 35
extern XCONST XPDTBL yPDTBL_z4B_WTLS_Record;
#define XPTID_z58_WDPhandler 36
extern XCONST XPDTBL yPDTBL_z58_WDPhandler;
#define XPTID_z59_WDPmanagement 37
extern XCONST XPDTBL yPDTBL_z59_WDPmanagement;

/*****
* PROCESS StackCtrl
* <<SYSTEM WAP/BLOCK Stack_Mgr>>
* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr,4,1)
******/
YPAD_PROTOTYPE(yPAD_z17_StackCtrl)
typedef struct {
    PROCESS_VARS
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),2) */
    SDL_Natural  z17B_n;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),3) */
    SDL_Natural  z17C_NbrOfLayers;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),4) */
    SDL_Natural  z17D_Wait;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),5) */
    SDL_Real  z17E_R;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),6) */
    SDL_Duration  z17F_Diff;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),7) */
    SDL_Natural  z17G_Layer;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),8) */
    SDL_Natural  z17H_needsCryptInit;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),9) */
    SDL_PId  z17I_mypid;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),182(5,50),10) */
    SDL_Integer  z17J_result;
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),239(5,90),2) */
    DEF_TIMER_VAR(yTim_MaxWait)
} yVDef_z17_StackCtrl;
#define z172_IDLE  1
#define z173_WaitForCryptInitResponse  2
#define z174_AwaitReadySignals  3
#define z175_AwaitWAEReadySignal  4
#define z176_AwaitWSPReadySignal  5
#define z177_AwaitWTPReadySignal  6
#define z178_AwaitWTLSReadySignal  7
#define z179_AwaitWDPReadySignal  8

/*****
* TIMER MaxWait
* <<SYSTEM WAP/BLOCK Stack_Mgr/PROCESS StackCtrl>>
* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),239(5,90),2)
******/
#define z17A_MaxWait 4

/*************************************************************************
**                #CODE directives, #HEADING sections                   **
*************************************************************************/
                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\WAP.ssy,4,2) */
#include "confvars.h"
#include "logcodes.h"
#include "errcodes.h"
#include "aapiudp.h"
#include "aapiclnt.h"
#include "capiclnt.h"

                /* #SDTREF(SDL,D:\WIP\Maintenance\4.x\System\SystemConfigurations\base_push_wta_wtls_co_korea\sdl\stackmgr\stackctrl.spr(Startup),239(5,90),2) */
#if defined CONFIG_WTLS || defined CAN_SIGN_TEXT
#include "aapicrpt.h"
#endif

