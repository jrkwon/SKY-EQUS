//==============================================================================
//
//	Color LCD library
//
//==============================================================================

#ifdef SWAP_LCD_COLOR

#if (SWAP_LCD_TYPE == SWAP_LCD_COLOR256_HORIZ)
static const BYTE Zi0BnxOT[7][6][S_MAX_COLOR] = {
{ { 
0xff, 0xff, 0xdb, 0xb7, 0xb7, 0xff, 0xff, 0xdb, 0xff, 0xdb, 0xb7, 0xff, 0xff, 0xdb, 0xb7, 0xff, 
0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbf, 
0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xd7, 
0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdf, 0xdf, 
0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xf7, 0xbf, 0xb7, 
0xff, 0xdb, 0xb7, 0xbf, 0xbb, 0xb7, 0xbf, 0xbb, 0xb7, 0xb7, 0xb7, 0xb7, 0xf7, 0xd7, 0xb7, 0xf7, 
0xd7, 0xf7, 0xb7, 0xff, 0xdb, 0xff, 0xb7, 0xbf, 0xbb, 0xbf, 0xb7, 0xbf, 0xbb, 0xbf, 0xb7, 0xb7, 
0xb7, 0xb7, 0xb7, 0xf7, 0xd7, 0xf7 }, { 
0xff, 0xff, 0xdb, 0xb7, 0xb7, 0xff, 0xdb, 0xb7, 0xff, 0xff, 0xdb, 0xff, 0xdb, 0xff, 0xdb, 0xff, 
0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbf, 
0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xd7, 
0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdf, 0xdf, 
0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xf7, 0xff, 
0xff, 0xff, 0xbf, 0xff, 0xbf, 0xbf, 0xff, 0xbf, 0xb7, 0xff, 0xb7, 0xf7, 0xff, 0xf7, 0xd7, 0xfb, 
0xf7, 0xfb, 0xdb, 0xff, 0xff, 0xff, 0xbb, 0xdf, 0xbf, 0xbf, 0xbb, 0xdf, 0xbf, 0xbf, 0xb7, 0xdb, 
0xb7, 0xd7, 0xd7, 0xfb, 0xf7, 0xf7 }, { 
0xff, 0xff, 0xdb, 0xb7, 0xb7, 0xff, 0xff, 0xdb, 0xff, 0xdb, 0xb7, 0xff, 0xdb, 0xff, 0xdb, 0xdb, 
0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbf, 
0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xd7, 
0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdf, 0xdf, 
0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xf7, 0xbf, 0xb7, 
0xff, 0xdb, 0xb7, 0xbf, 0xbb, 0xb7, 0xbf, 0xbb, 0xb7, 0xb7, 0xb7, 0xb7, 0xf7, 0xd7, 0xf7, 0xff, 
0xf7, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xbb, 0xff, 0xbf, 0xbf, 0xbf, 0xff, 0xbf, 0xbb, 0xb7, 0xff, 
0xb7, 0xf7, 0xf7, 0xff, 0xf7, 0xf7 }, { 
0xff, 0xff, 0xdb, 0xb7, 0xb7, 0xff, 0xdb, 0xb7, 0xff, 0xff, 0xdb, 0xdb, 0xb7, 0xff, 0xff, 0xb7, 
0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbf, 
0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xd7, 
0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdf, 0xdf, 
0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xf7, 0xff, 
0xff, 0xff, 0xbf, 0xff, 0xbf, 0xbf, 0xff, 0xbf, 0xb7, 0xb7, 0xb7, 0xf7, 0xff, 0xf7, 0xf7, 0xff, 
0xf7, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xbf, 0xff, 0xbf, 0xbf, 0xbf, 0xff, 0xbf, 0xb7, 0xb7, 0xff, 
0xb7, 0xf7, 0xf7, 0xff, 0xf7, 0xf7 }, { 
0xff, 0xff, 0xdb, 0xb7, 0xb7, 0xff, 0xff, 0xdb, 0xff, 0xdb, 0xb7, 0xff, 0xdb, 0xff, 0xdb, 0xdb, 
0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbf, 
0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xd7, 
0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdf, 0xdf, 
0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xf7, 0xbf, 0xb7, 
0xff, 0xdb, 0xb7, 0xbf, 0xbb, 0xb7, 0xbf, 0xbb, 0xb7, 0xb7, 0xb7, 0xb7, 0xf7, 0xd7, 0xf7, 0xff, 
0xf7, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xbb, 0xff, 0xbf, 0xbf, 0xbf, 0xff, 0xbf, 0xbb, 0xb7, 0xff, 
0xb7, 0xf7, 0xf7, 0xff, 0xf7, 0xf7 }, { 
0xff, 0xff, 0xdb, 0xb7, 0xb7, 0xff, 0xdb, 0xb7, 0xff, 0xff, 0xdb, 0xff, 0xdb, 0xff, 0xdb, 0xff, 
0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0xbf, 
0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xd7, 
0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdb, 0xdf, 0xdf, 
0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xdf, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xf7, 0xf7, 
0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xfb, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xf7, 0xff, 
0xff, 0xff, 0xbf, 0xff, 0xbf, 0xbf, 0xff, 0xbf, 0xb7, 0xb7, 0xb7, 0xf7, 0xff, 0xf7, 0xd7, 0xfb, 
0xf7, 0xfb, 0xdb, 0xff, 0xff, 0xff, 0xbb, 0xdf, 0xbf, 0xbf, 0xbb, 0xdf, 0xbf, 0xbf, 0xb7, 0xdb, 
0xb7, 0xd7, 0xd7, 0xfb, 0xf7, 0xf7 } }, {
{ 
0xff, 0xdb, 0xb7, 0x92, 0x92, 0xff, 0xdb, 0xb7, 0xdb, 0xb7, 0x92, 0xff, 0xdb, 0xb7, 0x92, 0xff, 
0x93, 0x93, 0x93, 0x92, 0x93, 0x93, 0x93, 0x96, 0x97, 0x97, 0x97, 0x96, 0x97, 0x97, 0x97, 0x9a, 
0x9b, 0x9b, 0x9b, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0xb2, 
0xb3, 0xb3, 0xb3, 0xb2, 0xb3, 0xb3, 0xb3, 0xb6, 0xb7, 0xb7, 0xb6, 0xb7, 0xb7, 0xb7, 0xba, 0xbb, 
0xbb, 0xbb, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xd2, 0xd3, 
0xd3, 0xd3, 0xd2, 0xd3, 0xd3, 0xd3, 0xd6, 0xd7, 0xd7, 0xd7, 0xd6, 0xd7, 0xd7, 0xd7, 0xda, 0xdb, 
0xdb, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xf2, 0xf3, 0xf3, 
0xf3, 0xf2, 0xf3, 0xf3, 0xf3, 0xf6, 0xf7, 0xf7, 0xf7, 0xf6, 0xf7, 0xf7, 0xf7, 0xfa, 0xfb, 0xfb, 
0xfb, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x92, 0xf2, 0x9e, 0x92, 
0xfe, 0xb6, 0x92, 0x9e, 0x96, 0x92, 0x9f, 0x97, 0x92, 0x93, 0x93, 0x92, 0xf3, 0xb3, 0x92, 0xf2, 
0xb2, 0xf2, 0x92, 0xfe, 0xb6, 0xff, 0x92, 0x9e, 0x96, 0x9e, 0x92, 0x9f, 0x97, 0x9f, 0x92, 0x93, 
0x93, 0x93, 0x92, 0xf3, 0xb3, 0xf3 }, { 
0xff, 0xdb, 0xb7, 0x92, 0x92, 0xdb, 0xb7, 0x92, 0xff, 0xdb, 0xb7, 0xdb, 0xb7, 0xdb, 0xb7, 0xdb, 
0x93, 0x93, 0x93, 0x92, 0x93, 0x93, 0x93, 0x96, 0x97, 0x97, 0x97, 0x96, 0x97, 0x97, 0x97, 0x9a, 
0x9b, 0x9b, 0x9b, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0xb2, 
0xb3, 0xb3, 0xb3, 0xb2, 0xb3, 0xb3, 0xb3, 0xb6, 0xb7, 0xb7, 0xb6, 0xb7, 0xb7, 0xb7, 0xba, 0xbb, 
0xbb, 0xbb, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xd2, 0xd3, 
0xd3, 0xd3, 0xd2, 0xd3, 0xd3, 0xd3, 0xd6, 0xd7, 0xd7, 0xd7, 0xd6, 0xd7, 0xd7, 0xd7, 0xda, 0xdb, 
0xdb, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xf2, 0xf3, 0xf3, 
0xf3, 0xf2, 0xf3, 0xf3, 0xf3, 0xf6, 0xf7, 0xf7, 0xf7, 0xf6, 0xf7, 0xf7, 0xf7, 0xfa, 0xfb, 0xfb, 
0xfb, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xf2, 0xff, 0xf2, 0xfe, 
0xff, 0xfe, 0x9e, 0xff, 0x9e, 0x9f, 0xff, 0x9f, 0x93, 0xff, 0x93, 0xf3, 0xff, 0xf3, 0xb2, 0xf7, 
0xd2, 0xf6, 0xb6, 0xff, 0xda, 0xde, 0x96, 0xbf, 0x9a, 0x9f, 0x97, 0xbe, 0x9b, 0x9b, 0x93, 0xb7, 
0x93, 0xb3, 0xb3, 0xf7, 0xd3, 0xf3 }, { 
0xff, 0xdb, 0xb7, 0x92, 0x92, 0xff, 0xdb, 0xb7, 0xdb, 0xb7, 0x92, 0xdb, 0xb7, 0xdb, 0xb7, 0xb7, 
0x93, 0x93, 0x93, 0x92, 0x93, 0x93, 0x93, 0x96, 0x97, 0x97, 0x97, 0x96, 0x97, 0x97, 0x97, 0x9a, 
0x9b, 0x9b, 0x9b, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0xb2, 
0xb3, 0xb3, 0xb3, 0xb2, 0xb3, 0xb3, 0xb3, 0xb6, 0xb7, 0xb7, 0xb6, 0xb7, 0xb7, 0xb7, 0xba, 0xbb, 
0xbb, 0xbb, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xd2, 0xd3, 
0xd3, 0xd3, 0xd2, 0xd3, 0xd3, 0xd3, 0xd6, 0xd7, 0xd7, 0xd7, 0xd6, 0xd7, 0xd7, 0xd7, 0xda, 0xdb, 
0xdb, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xf2, 0xf3, 0xf3, 
0xf3, 0xf2, 0xf3, 0xf3, 0xf3, 0xf6, 0xf7, 0xf7, 0xf7, 0xf6, 0xf7, 0xf7, 0xf7, 0xfa, 0xfb, 0xfb, 
0xfb, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x92, 0xf2, 0x9e, 0x92, 
0xfe, 0xb6, 0x92, 0x9e, 0x96, 0x92, 0x9f, 0x97, 0x92, 0x93, 0x93, 0x92, 0xf3, 0xb3, 0xd2, 0xfb, 
0xd2, 0xfa, 0xda, 0xff, 0xda, 0xbe, 0x96, 0xdf, 0x9a, 0x9f, 0x9b, 0xdf, 0x9b, 0x97, 0x93, 0xdb, 
0x93, 0xd3, 0xd3, 0xfb, 0xd3, 0xf3 }, { 
0xff, 0xdb, 0xb7, 0x92, 0x92, 0xdb, 0xb7, 0x92, 0xff, 0xdb, 0xb7, 0xb7, 0x92, 0xff, 0xdb, 0x92, 
0x93, 0x93, 0x93, 0x92, 0x93, 0x93, 0x93, 0x96, 0x97, 0x97, 0x97, 0x96, 0x97, 0x97, 0x97, 0x9a, 
0x9b, 0x9b, 0x9b, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0xb2, 
0xb3, 0xb3, 0xb3, 0xb2, 0xb3, 0xb3, 0xb3, 0xb6, 0xb7, 0xb7, 0xb6, 0xb7, 0xb7, 0xb7, 0xba, 0xbb, 
0xbb, 0xbb, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xd2, 0xd3, 
0xd3, 0xd3, 0xd2, 0xd3, 0xd3, 0xd3, 0xd6, 0xd7, 0xd7, 0xd7, 0xd6, 0xd7, 0xd7, 0xd7, 0xda, 0xdb, 
0xdb, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xf2, 0xf3, 0xf3, 
0xf3, 0xf2, 0xf3, 0xf3, 0xf3, 0xf6, 0xf7, 0xf7, 0xf7, 0xf6, 0xf7, 0xf7, 0xf7, 0xfa, 0xfb, 0xfb, 
0xfb, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xf2, 0xff, 0xf2, 0xfe, 
0xff, 0xfe, 0x9e, 0xff, 0x9e, 0x9f, 0xff, 0x9f, 0x93, 0x93, 0x93, 0xf3, 0xff, 0xf3, 0xf2, 0xff, 
0xf2, 0xfe, 0xff, 0xff, 0xff, 0x9e, 0x9e, 0xff, 0x9e, 0x9f, 0x9f, 0xff, 0x9f, 0x93, 0x93, 0xff, 
0x93, 0xf3, 0xf3, 0xff, 0xf3, 0xf2 }, { 
0xff, 0xdb, 0xb7, 0x92, 0x92, 0xff, 0xdb, 0xb7, 0xdb, 0xb7, 0x92, 0xdb, 0xb7, 0xdb, 0xb7, 0xb7, 
0x93, 0x93, 0x93, 0x92, 0x93, 0x93, 0x93, 0x96, 0x97, 0x97, 0x97, 0x96, 0x97, 0x97, 0x97, 0x9a, 
0x9b, 0x9b, 0x9b, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0xb2, 
0xb3, 0xb3, 0xb3, 0xb2, 0xb3, 0xb3, 0xb3, 0xb6, 0xb7, 0xb7, 0xb6, 0xb7, 0xb7, 0xb7, 0xba, 0xbb, 
0xbb, 0xbb, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xd2, 0xd3, 
0xd3, 0xd3, 0xd2, 0xd3, 0xd3, 0xd3, 0xd6, 0xd7, 0xd7, 0xd7, 0xd6, 0xd7, 0xd7, 0xd7, 0xda, 0xdb, 
0xdb, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xf2, 0xf3, 0xf3, 
0xf3, 0xf2, 0xf3, 0xf3, 0xf3, 0xf6, 0xf7, 0xf7, 0xf7, 0xf6, 0xf7, 0xf7, 0xf7, 0xfa, 0xfb, 0xfb, 
0xfb, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x92, 0xf2, 0x9e, 0x92, 
0xfe, 0xb6, 0x92, 0x9e, 0x96, 0x92, 0x9f, 0x97, 0x92, 0x93, 0x93, 0x92, 0xf3, 0xb3, 0xd2, 0xfb, 
0xd2, 0xfa, 0xda, 0xff, 0xda, 0xbe, 0x96, 0xdf, 0x9a, 0x9f, 0x9b, 0xdf, 0x9b, 0x97, 0x93, 0xdb, 
0x93, 0xd3, 0xd3, 0xfb, 0xd3, 0xf3 }, { 
0xff, 0xdb, 0xb7, 0x92, 0x92, 0xdb, 0xb7, 0x92, 0xff, 0xdb, 0xb7, 0xdb, 0xb7, 0xdb, 0xb7, 0xdb, 
0x93, 0x93, 0x93, 0x92, 0x93, 0x93, 0x93, 0x96, 0x97, 0x97, 0x97, 0x96, 0x97, 0x97, 0x97, 0x9a, 
0x9b, 0x9b, 0x9b, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0x9e, 0x9f, 0x9f, 0x9f, 0xb2, 
0xb3, 0xb3, 0xb3, 0xb2, 0xb3, 0xb3, 0xb3, 0xb6, 0xb7, 0xb7, 0xb6, 0xb7, 0xb7, 0xb7, 0xba, 0xbb, 
0xbb, 0xbb, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xbe, 0xbf, 0xbf, 0xbf, 0xd2, 0xd3, 
0xd3, 0xd3, 0xd2, 0xd3, 0xd3, 0xd3, 0xd6, 0xd7, 0xd7, 0xd7, 0xd6, 0xd7, 0xd7, 0xd7, 0xda, 0xdb, 
0xdb, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xde, 0xdf, 0xdf, 0xdf, 0xf2, 0xf3, 0xf3, 
0xf3, 0xf2, 0xf3, 0xf3, 0xf3, 0xf6, 0xf7, 0xf7, 0xf7, 0xf6, 0xf7, 0xf7, 0xf7, 0xfa, 0xfb, 0xfb, 
0xfb, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xf2, 0xff, 0xf2, 0xfe, 
0xff, 0xfe, 0x9e, 0xff, 0x9e, 0x9f, 0xff, 0x9f, 0x93, 0x93, 0x93, 0xf3, 0xff, 0xf3, 0xb2, 0xf7, 
0xd2, 0xf6, 0xb6, 0xff, 0xda, 0xde, 0x96, 0xbf, 0x9a, 0x9f, 0x97, 0xbe, 0x9b, 0x9b, 0x93, 0xb7, 
0x93, 0xb3, 0xb3, 0xf7, 0xd3, 0xf3 } }, {
{ 
0xff, 0xb7, 0x92, 0x49, 0x49, 0xff, 0xb7, 0x92, 0xb7, 0x92, 0x49, 0xff, 0xb7, 0x92, 0x49, 0xff, 
0x4a, 0x4b, 0x4b, 0x4d, 0x4e, 0x4f, 0x4f, 0x51, 0x52, 0x53, 0x53, 0x51, 0x52, 0x53, 0x53, 0x55, 
0x56, 0x57, 0x57, 0x59, 0x5a, 0x5b, 0x5b, 0x5d, 0x5e, 0x5f, 0x5f, 0x5d, 0x5e, 0x5f, 0x5f, 0x89, 
0x8a, 0x8b, 0x8b, 0x8d, 0x8e, 0x8f, 0x8f, 0x91, 0x93, 0x93, 0x91, 0x92, 0x93, 0x93, 0x95, 0x96, 
0x97, 0x97, 0x99, 0x9a, 0x9b, 0x9b, 0x9d, 0x9e, 0x9f, 0x9f, 0x9d, 0x9e, 0x9f, 0x9f, 0xa9, 0xaa, 
0xab, 0xab, 0xad, 0xae, 0xaf, 0xaf, 0xb1, 0xb2, 0xb3, 0xb3, 0xb1, 0xb2, 0xb3, 0xb3, 0xb5, 0xb6, 
0xb7, 0xb9, 0xba, 0xbb, 0xbb, 0xbd, 0xbe, 0xbf, 0xbf, 0xbd, 0xbe, 0xbf, 0xbf, 0xe9, 0xea, 0xeb, 
0xeb, 0xed, 0xee, 0xef, 0xef, 0xf1, 0xf2, 0xf3, 0xf3, 0xf1, 0xf2, 0xf3, 0xf3, 0xf5, 0xf6, 0xf7, 
0xf7, 0xf9, 0xfa, 0xfb, 0xfb, 0xfd, 0xfe, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0x49, 0xe9, 0x5d, 0x49, 
0xfd, 0x91, 0x49, 0x5d, 0x51, 0x49, 0x5f, 0x52, 0x49, 0x4b, 0x4a, 0x49, 0xeb, 0x8a, 0x49, 0xe9, 
0x89, 0xe9, 0x49, 0xfd, 0x91, 0xfe, 0x49, 0x5d, 0x51, 0x5d, 0x49, 0x5f, 0x52, 0x5f, 0x49, 0x4b, 
0x4a, 0x4b, 0x49, 0xeb, 0x8a, 0xeb }, { 
0xff, 0xb7, 0x92, 0x49, 0x49, 0xb7, 0x92, 0x49, 0xff, 0xb7, 0x92, 0xb7, 0x92, 0xb7, 0x92, 0xb7, 
0x4a, 0x4b, 0x4b, 0x4d, 0x4e, 0x4f, 0x4f, 0x51, 0x52, 0x53, 0x53, 0x51, 0x52, 0x53, 0x53, 0x55, 
0x56, 0x57, 0x57, 0x59, 0x5a, 0x5b, 0x5b, 0x5d, 0x5e, 0x5f, 0x5f, 0x5d, 0x5e, 0x5f, 0x5f, 0x89, 
0x8a, 0x8b, 0x8b, 0x8d, 0x8e, 0x8f, 0x8f, 0x91, 0x93, 0x93, 0x91, 0x92, 0x93, 0x93, 0x95, 0x96, 
0x97, 0x97, 0x99, 0x9a, 0x9b, 0x9b, 0x9d, 0x9e, 0x9f, 0x9f, 0x9d, 0x9e, 0x9f, 0x9f, 0xa9, 0xaa, 
0xab, 0xab, 0xad, 0xae, 0xaf, 0xaf, 0xb1, 0xb2, 0xb3, 0xb3, 0xb1, 0xb2, 0xb3, 0xb3, 0xb5, 0xb6, 
0xb7, 0xb9, 0xba, 0xbb, 0xbb, 0xbd, 0xbe, 0xbf, 0xbf, 0xbd, 0xbe, 0xbf, 0xbf, 0xe9, 0xea, 0xeb, 
0xeb, 0xed, 0xee, 0xef, 0xef, 0xf1, 0xf2, 0xf3, 0xf3, 0xf1, 0xf2, 0xf3, 0xf3, 0xf5, 0xf6, 0xf7, 
0xf7, 0xf9, 0xfa, 0xfb, 0xfb, 0xfd, 0xfe, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0xe9, 0xff, 0xe9, 0xfd, 
0xff, 0xfd, 0x5d, 0xff, 0x5d, 0x5f, 0xff, 0x5f, 0x4b, 0xff, 0x4b, 0xeb, 0xff, 0xeb, 0x89, 0xf2, 
0xa9, 0xf1, 0x91, 0xfe, 0xb5, 0xbd, 0x51, 0x9e, 0x55, 0x5e, 0x52, 0x9d, 0x57, 0x57, 0x4a, 0x93, 
0x4b, 0x8b, 0x8a, 0xf2, 0xab, 0xeb }, { 
0xff, 0xb7, 0x92, 0x49, 0x49, 0xff, 0xb7, 0x92, 0xb7, 0x92, 0x49, 0xb7, 0x92, 0xb7, 0x92, 0x92, 
0x4a, 0x4b, 0x4b, 0x4d, 0x4e, 0x4f, 0x4f, 0x51, 0x52, 0x53, 0x53, 0x51, 0x52, 0x53, 0x53, 0x55, 
0x56, 0x57, 0x57, 0x59, 0x5a, 0x5b, 0x5b, 0x5d, 0x5e, 0x5f, 0x5f, 0x5d, 0x5e, 0x5f, 0x5f, 0x89, 
0x8a, 0x8b, 0x8b, 0x8d, 0x8e, 0x8f, 0x8f, 0x91, 0x93, 0x93, 0x91, 0x92, 0x93, 0x93, 0x95, 0x96, 
0x97, 0x97, 0x99, 0x9a, 0x9b, 0x9b, 0x9d, 0x9e, 0x9f, 0x9f, 0x9d, 0x9e, 0x9f, 0x9f, 0xa9, 0xaa, 
0xab, 0xab, 0xad, 0xae, 0xaf, 0xaf, 0xb1, 0xb2, 0xb3, 0xb3, 0xb1, 0xb2, 0xb3, 0xb3, 0xb5, 0xb6, 
0xb7, 0xb9, 0xba, 0xbb, 0xbb, 0xbd, 0xbe, 0xbf, 0xbf, 0xbd, 0xbe, 0xbf, 0xbf, 0xe9, 0xea, 0xeb, 
0xeb, 0xed, 0xee, 0xef, 0xef, 0xf1, 0xf2, 0xf3, 0xf3, 0xf1, 0xf2, 0xf3, 0xf3, 0xf5, 0xf6, 0xf7, 
0xf7, 0xf9, 0xfa, 0xfb, 0xfb, 0xfd, 0xfe, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0x49, 0xe9, 0x5d, 0x49, 
0xfd, 0x91, 0x49, 0x5d, 0x51, 0x49, 0x5f, 0x52, 0x49, 0x4b, 0x4a, 0x49, 0xeb, 0x8a, 0xa9, 0xf7, 
0xa9, 0xf5, 0xb5, 0xff, 0xb5, 0x9d, 0x51, 0xbf, 0x55, 0x5f, 0x57, 0xbe, 0x57, 0x53, 0x4b, 0xb7, 
0x4b, 0xab, 0xab, 0xf6, 0xab, 0xea }, { 
0xff, 0xb7, 0x92, 0x49, 0x49, 0xb7, 0x92, 0x49, 0xff, 0xb7, 0x92, 0x92, 0x49, 0xff, 0xb7, 0x49, 
0x4a, 0x4b, 0x4b, 0x4d, 0x4e, 0x4f, 0x4f, 0x51, 0x52, 0x53, 0x53, 0x51, 0x52, 0x53, 0x53, 0x55, 
0x56, 0x57, 0x57, 0x59, 0x5a, 0x5b, 0x5b, 0x5d, 0x5e, 0x5f, 0x5f, 0x5d, 0x5e, 0x5f, 0x5f, 0x89, 
0x8a, 0x8b, 0x8b, 0x8d, 0x8e, 0x8f, 0x8f, 0x91, 0x93, 0x93, 0x91, 0x92, 0x93, 0x93, 0x95, 0x96, 
0x97, 0x97, 0x99, 0x9a, 0x9b, 0x9b, 0x9d, 0x9e, 0x9f, 0x9f, 0x9d, 0x9e, 0x9f, 0x9f, 0xa9, 0xaa, 
0xab, 0xab, 0xad, 0xae, 0xaf, 0xaf, 0xb1, 0xb2, 0xb3, 0xb3, 0xb1, 0xb2, 0xb3, 0xb3, 0xb5, 0xb6, 
0xb7, 0xb9, 0xba, 0xbb, 0xbb, 0xbd, 0xbe, 0xbf, 0xbf, 0xbd, 0xbe, 0xbf, 0xbf, 0xe9, 0xea, 0xeb, 
0xeb, 0xed, 0xee, 0xef, 0xef, 0xf1, 0xf2, 0xf3, 0xf3, 0xf1, 0xf2, 0xf3, 0xf3, 0xf5, 0xf6, 0xf7, 
0xf7, 0xf9, 0xfa, 0xfb, 0xfb, 0xfd, 0xfe, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0xe9, 0xff, 0xe9, 0xfd, 
0xff, 0xfd, 0x5d, 0xff, 0x5d, 0x5f, 0xff, 0x5f, 0x4b, 0x4b, 0x4b, 0xeb, 0xff, 0xeb, 0xe9, 0xff, 
0xe9, 0xfd, 0xfe, 0xff, 0xfe, 0x5d, 0x5d, 0xff, 0x5d, 0x5f, 0x5f, 0xff, 0x5f, 0x4b, 0x4b, 0xff, 
0x4b, 0xeb, 0xeb, 0xff, 0xeb, 0xe9 }, { 
0xff, 0xb7, 0x92, 0x49, 0x49, 0xff, 0xb7, 0x92, 0xb7, 0x92, 0x49, 0xb7, 0x92, 0xb7, 0x92, 0x92, 
0x4a, 0x4b, 0x4b, 0x4d, 0x4e, 0x4f, 0x4f, 0x51, 0x52, 0x53, 0x53, 0x51, 0x52, 0x53, 0x53, 0x55, 
0x56, 0x57, 0x57, 0x59, 0x5a, 0x5b, 0x5b, 0x5d, 0x5e, 0x5f, 0x5f, 0x5d, 0x5e, 0x5f, 0x5f, 0x89, 
0x8a, 0x8b, 0x8b, 0x8d, 0x8e, 0x8f, 0x8f, 0x91, 0x93, 0x93, 0x91, 0x92, 0x93, 0x93, 0x95, 0x96, 
0x97, 0x97, 0x99, 0x9a, 0x9b, 0x9b, 0x9d, 0x9e, 0x9f, 0x9f, 0x9d, 0x9e, 0x9f, 0x9f, 0xa9, 0xaa, 
0xab, 0xab, 0xad, 0xae, 0xaf, 0xaf, 0xb1, 0xb2, 0xb3, 0xb3, 0xb1, 0xb2, 0xb3, 0xb3, 0xb5, 0xb6, 
0xb7, 0xb9, 0xba, 0xbb, 0xbb, 0xbd, 0xbe, 0xbf, 0xbf, 0xbd, 0xbe, 0xbf, 0xbf, 0xe9, 0xea, 0xeb, 
0xeb, 0xed, 0xee, 0xef, 0xef, 0xf1, 0xf2, 0xf3, 0xf3, 0xf1, 0xf2, 0xf3, 0xf3, 0xf5, 0xf6, 0xf7, 
0xf7, 0xf9, 0xfa, 0xfb, 0xfb, 0xfd, 0xfe, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0x49, 0xe9, 0x5d, 0x49, 
0xfd, 0x91, 0x49, 0x5d, 0x51, 0x49, 0x5f, 0x52, 0x49, 0x4b, 0x4a, 0x49, 0xeb, 0x8a, 0xa9, 0xf7, 
0xa9, 0xf5, 0xb5, 0xff, 0xb5, 0x9d, 0x51, 0xbf, 0x55, 0x5f, 0x57, 0xbe, 0x57, 0x53, 0x4b, 0xb7, 
0x4b, 0xab, 0xab, 0xf6, 0xab, 0xea }, { 
0xff, 0xb7, 0x92, 0x49, 0x49, 0xb7, 0x92, 0x49, 0xff, 0xb7, 0x92, 0xb7, 0x92, 0xb7, 0x92, 0xb7, 
0x4a, 0x4b, 0x4b, 0x4d, 0x4e, 0x4f, 0x4f, 0x51, 0x52, 0x53, 0x53, 0x51, 0x52, 0x53, 0x53, 0x55, 
0x56, 0x57, 0x57, 0x59, 0x5a, 0x5b, 0x5b, 0x5d, 0x5e, 0x5f, 0x5f, 0x5d, 0x5e, 0x5f, 0x5f, 0x89, 
0x8a, 0x8b, 0x8b, 0x8d, 0x8e, 0x8f, 0x8f, 0x91, 0x93, 0x93, 0x91, 0x92, 0x93, 0x93, 0x95, 0x96, 
0x97, 0x97, 0x99, 0x9a, 0x9b, 0x9b, 0x9d, 0x9e, 0x9f, 0x9f, 0x9d, 0x9e, 0x9f, 0x9f, 0xa9, 0xaa, 
0xab, 0xab, 0xad, 0xae, 0xaf, 0xaf, 0xb1, 0xb2, 0xb3, 0xb3, 0xb1, 0xb2, 0xb3, 0xb3, 0xb5, 0xb6, 
0xb7, 0xb9, 0xba, 0xbb, 0xbb, 0xbd, 0xbe, 0xbf, 0xbf, 0xbd, 0xbe, 0xbf, 0xbf, 0xe9, 0xea, 0xeb, 
0xeb, 0xed, 0xee, 0xef, 0xef, 0xf1, 0xf2, 0xf3, 0xf3, 0xf1, 0xf2, 0xf3, 0xf3, 0xf5, 0xf6, 0xf7, 
0xf7, 0xf9, 0xfa, 0xfb, 0xfb, 0xfd, 0xfe, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0xe9, 0xff, 0xe9, 0xfd, 
0xff, 0xfd, 0x5d, 0xff, 0x5d, 0x5f, 0xff, 0x5f, 0x4b, 0x4b, 0x4b, 0xeb, 0xff, 0xeb, 0x89, 0xf2, 
0xa9, 0xf1, 0x91, 0xfe, 0xb5, 0xbd, 0x51, 0x9e, 0x55, 0x5e, 0x52, 0x9d, 0x57, 0x57, 0x4a, 0x93, 
0x4b, 0x8b, 0x8a, 0xf2, 0xab, 0xeb } }, {
{ 
0xff, 0x92, 0x49, 0x00, 0x00, 0xff, 0x92, 0x49, 0x92, 0x49, 0x00, 0xff, 0x92, 0x49, 0x00, 0xff, 
0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 
0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x40, 
0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 
0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x80, 0x81, 
0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 
0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xe0, 0xe1, 0xe2, 
0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 
0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0x00, 0xe0, 0x1c, 0x00, 
0xfc, 0x48, 0x00, 0x1c, 0x08, 0x00, 0x1f, 0x09, 0x00, 0x03, 0x01, 0x00, 0xe3, 0x41, 0x00, 0xe0, 
0x40, 0xe0, 0x00, 0xfc, 0x48, 0xfd, 0x00, 0x1c, 0x08, 0x1c, 0x00, 0x1f, 0x09, 0x1f, 0x00, 0x03, 
0x01, 0x03, 0x00, 0xe3, 0x41, 0xe3 }, { 
0xff, 0x92, 0x49, 0x00, 0x00, 0x92, 0x49, 0x00, 0xff, 0x92, 0x49, 0x92, 0x49, 0x92, 0x49, 0x92, 
0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 
0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x40, 
0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 
0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x80, 0x81, 
0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 
0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xe0, 0xe1, 0xe2, 
0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 
0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xe0, 0xff, 0xe0, 0xfc, 
0xff, 0xfc, 0x1c, 0xff, 0x1c, 0x1f, 0xff, 0x1f, 0x03, 0xff, 0x03, 0xe3, 0xff, 0xe3, 0x40, 0xe9, 
0x80, 0xe8, 0x48, 0xfd, 0x90, 0x9c, 0x08, 0x5d, 0x10, 0x1d, 0x09, 0x5c, 0x12, 0x13, 0x01, 0x4b, 
0x02, 0x43, 0x41, 0xe9, 0x82, 0xe2 }, { 
0xff, 0x92, 0x49, 0x00, 0x00, 0xff, 0x92, 0x49, 0x92, 0x49, 0x00, 0x92, 0x49, 0x92, 0x49, 0x49, 
0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 
0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x40, 
0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 
0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x80, 0x81, 
0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 
0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xe0, 0xe1, 0xe2, 
0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 
0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0x00, 0xe0, 0x1c, 0x00, 
0xfc, 0x48, 0x00, 0x1c, 0x08, 0x00, 0x1f, 0x09, 0x00, 0x03, 0x01, 0x00, 0xe3, 0x41, 0x80, 0xf2, 
0x80, 0xf0, 0x90, 0xfe, 0x90, 0x5c, 0x08, 0x9e, 0x10, 0x1e, 0x12, 0x9d, 0x12, 0x0b, 0x02, 0x93, 
0x02, 0x83, 0x82, 0xf1, 0x82, 0xe1 }, { 
0xff, 0x92, 0x49, 0x00, 0x00, 0x92, 0x49, 0x00, 0xff, 0x92, 0x49, 0x49, 0x00, 0xff, 0x92, 0x00, 
0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 
0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x40, 
0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 
0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x80, 0x81, 
0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 
0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xe0, 0xe1, 0xe2, 
0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 
0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xe0, 0xff, 0xe0, 0xfc, 
0xff, 0xfc, 0x1c, 0xff, 0x1c, 0x1f, 0xff, 0x1f, 0x03, 0x03, 0x03, 0xe3, 0xff, 0xe3, 0xe0, 0xff, 
0xe0, 0xfc, 0xfd, 0xff, 0xfd, 0x1c, 0x1c, 0xff, 0x1c, 0x1f, 0x1f, 0xff, 0x1f, 0x03, 0x03, 0xff, 
0x03, 0xe3, 0xe3, 0xff, 0xe3, 0xe0 }, { 
0xff, 0x92, 0x49, 0x00, 0x00, 0xff, 0x92, 0x49, 0x92, 0x49, 0x00, 0x92, 0x49, 0x92, 0x49, 0x49, 
0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 
0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x40, 
0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 
0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x80, 0x81, 
0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 
0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xe0, 0xe1, 0xe2, 
0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 
0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0x00, 0xe0, 0x1c, 0x00, 
0xfc, 0x48, 0x00, 0x1c, 0x08, 0x00, 0x1f, 0x09, 0x00, 0x03, 0x01, 0x00, 0xe3, 0x41, 0x80, 0xf2, 
0x80, 0xf0, 0x90, 0xfe, 0x90, 0x5c, 0x08, 0x9e, 0x10, 0x1e, 0x12, 0x9d, 0x12, 0x0b, 0x02, 0x93, 
0x02, 0x83, 0x82, 0xf1, 0x82, 0xe1 }, { 
0xff, 0x92, 0x49, 0x00, 0x00, 0x92, 0x49, 0x00, 0xff, 0x92, 0x49, 0x92, 0x49, 0x92, 0x49, 0x92, 
0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 
0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x40, 
0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 
0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x80, 0x81, 
0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 
0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xe0, 0xe1, 0xe2, 
0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 
0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xe0, 0xff, 0xe0, 0xfc, 
0xff, 0xfc, 0x1c, 0xff, 0x1c, 0x1f, 0xff, 0x1f, 0x03, 0x03, 0x03, 0xe3, 0xff, 0xe3, 0x40, 0xe9, 
0x80, 0xe8, 0x48, 0xfd, 0x90, 0x9c, 0x08, 0x5d, 0x10, 0x1d, 0x09, 0x5c, 0x12, 0x13, 0x01, 0x4b, 
0x02, 0x43, 0x41, 0xe9, 0x82, 0xe2 } }, {
{ 
0x49, 0x25, 0x24, 0x00, 0x00, 0x49, 0x25, 0x24, 0x25, 0x24, 0x00, 0x49, 0x25, 0x24, 0x00, 0x49, 
0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x04, 0x04, 0x05, 0x05, 0x04, 0x04, 0x05, 0x05, 0x04, 
0x04, 0x05, 0x05, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x20, 
0x20, 0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x20, 0x20, 
0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x40, 0x40, 0x41, 
0x41, 0x40, 0x40, 0x41, 0x41, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 
0x45, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x00, 0x40, 0x08, 0x00, 
0x48, 0x24, 0x00, 0x08, 0x04, 0x00, 0x09, 0x04, 0x00, 0x01, 0x00, 0x00, 0x41, 0x20, 0x00, 0x40, 
0x20, 0x40, 0x00, 0x48, 0x24, 0x48, 0x00, 0x08, 0x04, 0x08, 0x00, 0x09, 0x04, 0x09, 0x00, 0x01, 
0x00, 0x01, 0x00, 0x41, 0x20, 0x41 }, { 
0x49, 0x25, 0x24, 0x00, 0x00, 0x25, 0x24, 0x00, 0x49, 0x25, 0x24, 0x25, 0x24, 0x25, 0x24, 0x25, 
0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x04, 0x04, 0x05, 0x05, 0x04, 0x04, 0x05, 0x05, 0x04, 
0x04, 0x05, 0x05, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x20, 
0x20, 0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x20, 0x20, 
0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x40, 0x40, 0x41, 
0x41, 0x40, 0x40, 0x41, 0x41, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 
0x45, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x40, 0x49, 0x40, 0x48, 
0x49, 0x48, 0x08, 0x49, 0x08, 0x09, 0x49, 0x09, 0x01, 0x49, 0x01, 0x41, 0x49, 0x41, 0x20, 0x44, 
0x20, 0x44, 0x24, 0x48, 0x24, 0x28, 0x04, 0x28, 0x04, 0x08, 0x04, 0x28, 0x05, 0x05, 0x00, 0x25, 
0x01, 0x21, 0x20, 0x44, 0x21, 0x41 }, { 
0x49, 0x25, 0x24, 0x00, 0x00, 0x49, 0x25, 0x24, 0x25, 0x24, 0x00, 0x25, 0x24, 0x25, 0x24, 0x24, 
0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x04, 0x04, 0x05, 0x05, 0x04, 0x04, 0x05, 0x05, 0x04, 
0x04, 0x05, 0x05, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x20, 
0x20, 0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x20, 0x20, 
0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x40, 0x40, 0x41, 
0x41, 0x40, 0x40, 0x41, 0x41, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 
0x45, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x00, 0x40, 0x08, 0x00, 
0x48, 0x24, 0x00, 0x08, 0x04, 0x00, 0x09, 0x04, 0x00, 0x01, 0x00, 0x00, 0x41, 0x20, 0x20, 0x45, 
0x20, 0x44, 0x24, 0x49, 0x24, 0x28, 0x04, 0x29, 0x04, 0x09, 0x05, 0x28, 0x05, 0x05, 0x01, 0x25, 
0x01, 0x21, 0x21, 0x44, 0x21, 0x40 }, { 
0x49, 0x25, 0x24, 0x00, 0x00, 0x25, 0x24, 0x00, 0x49, 0x25, 0x24, 0x24, 0x00, 0x49, 0x25, 0x00, 
0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x04, 0x04, 0x05, 0x05, 0x04, 0x04, 0x05, 0x05, 0x04, 
0x04, 0x05, 0x05, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x20, 
0x20, 0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x20, 0x20, 
0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x40, 0x40, 0x41, 
0x41, 0x40, 0x40, 0x41, 0x41, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 
0x45, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x40, 0x49, 0x40, 0x48, 
0x49, 0x48, 0x08, 0x49, 0x08, 0x09, 0x49, 0x09, 0x01, 0x01, 0x01, 0x41, 0x49, 0x41, 0x40, 0x49, 
0x40, 0x48, 0x48, 0x49, 0x48, 0x08, 0x08, 0x49, 0x08, 0x09, 0x09, 0x49, 0x09, 0x01, 0x01, 0x49, 
0x01, 0x41, 0x41, 0x49, 0x41, 0x40 }, { 
0x49, 0x25, 0x24, 0x00, 0x00, 0x49, 0x25, 0x24, 0x25, 0x24, 0x00, 0x25, 0x24, 0x25, 0x24, 0x24, 
0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x04, 0x04, 0x05, 0x05, 0x04, 0x04, 0x05, 0x05, 0x04, 
0x04, 0x05, 0x05, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x20, 
0x20, 0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x20, 0x20, 
0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x40, 0x40, 0x41, 
0x41, 0x40, 0x40, 0x41, 0x41, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 
0x45, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x00, 0x40, 0x08, 0x00, 
0x48, 0x24, 0x00, 0x08, 0x04, 0x00, 0x09, 0x04, 0x00, 0x01, 0x00, 0x00, 0x41, 0x20, 0x20, 0x45, 
0x20, 0x44, 0x24, 0x49, 0x24, 0x28, 0x04, 0x29, 0x04, 0x09, 0x05, 0x28, 0x05, 0x05, 0x01, 0x25, 
0x01, 0x21, 0x21, 0x44, 0x21, 0x40 }, { 
0x49, 0x25, 0x24, 0x00, 0x00, 0x25, 0x24, 0x00, 0x49, 0x25, 0x24, 0x25, 0x24, 0x25, 0x24, 0x25, 
0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x04, 0x04, 0x05, 0x05, 0x04, 0x04, 0x05, 0x05, 0x04, 
0x04, 0x05, 0x05, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x08, 0x08, 0x09, 0x09, 0x20, 
0x20, 0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x20, 0x20, 
0x21, 0x21, 0x20, 0x20, 0x21, 0x21, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 
0x25, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x40, 0x40, 0x41, 
0x41, 0x40, 0x40, 0x41, 0x41, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 0x45, 0x44, 0x44, 0x45, 
0x45, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x49, 0x48, 0x48, 0x49, 0x40, 0x49, 0x40, 0x48, 
0x49, 0x48, 0x08, 0x49, 0x08, 0x09, 0x49, 0x09, 0x01, 0x01, 0x01, 0x41, 0x49, 0x41, 0x20, 0x44, 
0x20, 0x44, 0x24, 0x48, 0x24, 0x28, 0x04, 0x28, 0x04, 0x08, 0x04, 0x28, 0x05, 0x05, 0x00, 0x25, 
0x01, 0x21, 0x20, 0x44, 0x21, 0x41 } }, {
{ 
0x24, 0x24, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x24, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x24, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x20, 0x04, 0x00, 
0x24, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 
0x00, 0x20, 0x00, 0x24, 0x00, 0x24, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x20, 0x00, 0x20 }, { 
0x24, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x24, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x24, 0x20, 0x24, 
0x24, 0x24, 0x04, 0x24, 0x04, 0x04, 0x24, 0x04, 0x00, 0x24, 0x00, 0x20, 0x24, 0x20, 0x00, 0x20, 
0x20, 0x20, 0x00, 0x24, 0x24, 0x24, 0x00, 0x04, 0x04, 0x04, 0x00, 0x04, 0x04, 0x04, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x20, 0x20, 0x20 }, { 
0x24, 0x24, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x24, 0x00, 0x00, 0x24, 0x00, 0x24, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x20, 0x04, 0x00, 
0x24, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x24, 
0x20, 0x24, 0x24, 0x24, 0x24, 0x04, 0x00, 0x24, 0x04, 0x04, 0x04, 0x24, 0x04, 0x00, 0x00, 0x24, 
0x00, 0x20, 0x20, 0x24, 0x20, 0x20 }, { 
0x24, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x24, 0x20, 0x24, 
0x24, 0x24, 0x04, 0x24, 0x04, 0x04, 0x24, 0x04, 0x00, 0x00, 0x00, 0x20, 0x24, 0x20, 0x20, 0x24, 
0x20, 0x24, 0x24, 0x24, 0x24, 0x04, 0x04, 0x24, 0x04, 0x04, 0x04, 0x24, 0x04, 0x00, 0x00, 0x24, 
0x00, 0x20, 0x20, 0x24, 0x20, 0x20 }, { 
0x24, 0x24, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x24, 0x00, 0x00, 0x24, 0x00, 0x24, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x20, 0x04, 0x00, 
0x24, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x24, 
0x20, 0x24, 0x24, 0x24, 0x24, 0x04, 0x00, 0x24, 0x04, 0x04, 0x04, 0x24, 0x04, 0x00, 0x00, 0x24, 
0x00, 0x20, 0x20, 0x24, 0x20, 0x20 }, { 
0x24, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x24, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x20, 0x20, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 
0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x20, 0x24, 0x20, 0x24, 
0x24, 0x24, 0x04, 0x24, 0x04, 0x04, 0x24, 0x04, 0x00, 0x00, 0x00, 0x20, 0x24, 0x20, 0x00, 0x20, 
0x20, 0x20, 0x00, 0x24, 0x24, 0x24, 0x00, 0x04, 0x04, 0x04, 0x00, 0x04, 0x04, 0x04, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x20, 0x20, 0x20 } }, {
{ 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, { 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, { 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, { 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, { 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, { 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } } };
typedef struct _ImgHdrCr256 {
BYTE type; 
BYTE qm7J64q3, h; 
INT2 LbPt5vw8, y; 
WORD tr_index; 
BYTE *bitmap; 
BYTE OEjq6ZgK[256]; 
} ImgHdrCr256;
static BYTE CzyMA07Z[S_MAX_COLOR]; 
static BYTE jYPKuxnw; 
static BYTE kkNN5Ev6; 
static void iW0pdjQP(ImgHdrCr256 *pImgHdr);
static void pohX7Er3(ImgHdrCr256 *pImgHdr);
static void jGtO1FB9(ImgHdrCr256 *pImgHdr);
static void RVhGK7nm(ImgHdrCr256 *pImgHdr);
static void IOd5DYzC(ImgHdrCr256 *pImgHdr);
static void VJ9k9RQN(ImgHdrCr256 *pImgHdr);
static void M1P1NHy9(ImgHdrCr256 *pImgHdr);
static void wdYZBfxC(ImgHdrCr256 *pImgHdr);
static void (*SZysP4qw[])(ImgHdrCr256 *pImgHdr) = {
&iW0pdjQP, &pohX7Er3, &jGtO1FB9, &iW0pdjQP, &pohX7Er3, &jGtO1FB9, &RVhGK7nm
}; static void (*inTEQRbH[])(ImgHdrCr256 *pImgHdr) = {
&IOd5DYzC, &VJ9k9RQN, &M1P1NHy9, &IOd5DYzC, &VJ9k9RQN, &M1P1NHy9, &wdYZBfxC
};
void mil_ClearWhite()
{ CKOk9Z4Q(JZagjmLi, 0xFF, AvwqZ1W4); } void mil_ClearBlack()
{ CKOk9Z4Q(JZagjmLi, 0x00, AvwqZ1W4); }
void mil_InitLcd(int lcdWidth, int lcdHeight, BYTE* foreBuf, BYTE* backBuf)
{ JZagjmLi = foreBuf; nmRH4auG = backBuf;
h8iL9Zij = lcdWidth; UwJNuSkK = lcdHeight;
NP3y8tCu = lcdWidth; AvwqZ1W4 = lcdWidth*lcdHeight;
mil_SetGamma(3); mil_SetColor(S_BLACK); mil_ResetClip();
}
void mil_Clear(int D397hZog)
{ BYTE m3ESBpLZ; m3ESBpLZ = (D397hZog != S_TRANSPARENT) ? CzyMA07Z[D397hZog] : CzyMA07Z[S_WHITE];
CKOk9Z4Q(JZagjmLi, m3ESBpLZ, AvwqZ1W4); }
void mil_PutPixel(int LbPt5vw8, int y, int D397hZog)
{
BYTE m3ESBpLZ;
if (D397hZog == S_TRANSPARENT) return; if (LbPt5vw8 < f3CK6csT || LbPt5vw8 > Kh97ARZU || y < s_ClipY1 || y > s_ClipY2)
return; m3ESBpLZ = CzyMA07Z[D397hZog];
JZagjmLi[y*NP3y8tCu + LbPt5vw8] = m3ESBpLZ;
}
static void AQ4qIfP0(int LbPt5vw8, int y)
{
if (kkNN5Ev6 == S_TRANSPARENT)
return; JZagjmLi[y*NP3y8tCu + LbPt5vw8] = jYPKuxnw;
}
void mil_SetColor(int D397hZog)
{ b5Lr0cwi = kkNN5Ev6 = D397hZog; jYPKuxnw = (D397hZog != S_TRANSPARENT) ? CzyMA07Z[kkNN5Ev6] : CzyMA07Z[S_WHITE];
cAQOtAsc = AQ4qIfP0; }
void mil_SetBlinkColor(int frame6)
{ sW4PB08i(CzyMA07Z, &Zi0BnxOT[U6liRwBT][frame6][0], sizeof(CzyMA07Z));
jYPKuxnw = (kkNN5Ev6 != S_TRANSPARENT) ? CzyMA07Z[kkNN5Ev6] : CzyMA07Z[S_WHITE];
}
void mil_SetGamma(int gamma)
{ U6liRwBT = gamma; sW4PB08i(CzyMA07Z, &Zi0BnxOT[U6liRwBT][0][0], sizeof(CzyMA07Z));
mil_SetColor(kkNN5Ev6); }
int mil_GetPixel(int LbPt5vw8, int y)
{ BYTE LG0dStpd; if (LbPt5vw8 >= 0 && LbPt5vw8 < h8iL9Zij && y >= 0 && y < UwJNuSkK)
{ LG0dStpd = JZagjmLi[y*NP3y8tCu + LbPt5vw8];
return (int)LG0dStpd; } else return -1; 
}
void mil_InvertRect(int CYVLXJkW, int qb0L1TPI, int LINj8eGO, int TYFI6PC8)
{ BYTE *kor8Q3C3; int OOzmyCcI, N3jRR8ZR;
int mSdyqwa7; if (CYVLXJkW > LINj8eGO)
{ mSdyqwa7 = LINj8eGO; LINj8eGO = CYVLXJkW;
CYVLXJkW = mSdyqwa7; } if (qb0L1TPI > TYFI6PC8)
{ mSdyqwa7 = TYFI6PC8; TYFI6PC8 = qb0L1TPI;
qb0L1TPI = mSdyqwa7; } if (CYVLXJkW < f3CK6csT)
CYVLXJkW = f3CK6csT; else if (CYVLXJkW > Kh97ARZU)
return; if (LINj8eGO < f3CK6csT) return; else if (LINj8eGO > Kh97ARZU)
LINj8eGO = Kh97ARZU; if (qb0L1TPI < s_ClipY1)
qb0L1TPI = s_ClipY1; else if (qb0L1TPI > s_ClipY2)
return; if (TYFI6PC8 < s_ClipY1) return; else if (TYFI6PC8 > s_ClipY2)
TYFI6PC8 = s_ClipY2; for (OOzmyCcI = CYVLXJkW; OOzmyCcI <= LINj8eGO; OOzmyCcI++)
{ for (N3jRR8ZR = qb0L1TPI; N3jRR8ZR <= TYFI6PC8; N3jRR8ZR++)
{ kor8Q3C3 = &JZagjmLi[N3jRR8ZR*NP3y8tCu + OOzmyCcI];
*kor8Q3C3 = ~(*kor8Q3C3); } } }
void mil_ScrollLCD(int lcd, int dx, int dy, int wrap)
{ BYTE *lcdBuf; BYTE *FcyUMPlI, *VUbfJ7Rp;
BYTE scrollBuf[S_SCROLL_BUFSIZE]; int OOzmyCcI, N3jRR8ZR;
if ((wrap & (~0x01)) || (lcd & (~0x01))) 
return; lcdBuf = (lcd == 0) ? JZagjmLi : nmRH4auG;
if (wrap == 0) 
{ if (h8iL9Zij < dx || dx < -h8iL9Zij || UwJNuSkK < dy || dy < -UwJNuSkK)
{ mil_ClearWhite(); 
return; } if (dx > 0) 
{ for (N3jRR8ZR = 0; N3jRR8ZR < UwJNuSkK; N3jRR8ZR++)
{ FcyUMPlI = &lcdBuf[N3jRR8ZR*h8iL9Zij]; GICEruWy(FcyUMPlI + dx, FcyUMPlI, h8iL9Zij - dx);
CKOk9Z4Q(FcyUMPlI, 0xFF, dx); } } else if (dx < 0) 
{ for (N3jRR8ZR = 0; N3jRR8ZR < UwJNuSkK; N3jRR8ZR++)
{ FcyUMPlI = &lcdBuf[N3jRR8ZR*h8iL9Zij]; GICEruWy(FcyUMPlI, FcyUMPlI - dx, h8iL9Zij + dx);
FcyUMPlI = &lcdBuf[(N3jRR8ZR + 1)*h8iL9Zij + dx];
CKOk9Z4Q(FcyUMPlI, 0xFF, -dx); } } if (dy > 0) 
{ GICEruWy(&lcdBuf[dy*NP3y8tCu], lcdBuf, (UwJNuSkK - dy)*NP3y8tCu);
CKOk9Z4Q(lcdBuf, 0xFF, dy*NP3y8tCu); } else if (dy < 0) 
{ GICEruWy(lcdBuf, &lcdBuf[-dy*NP3y8tCu], (UwJNuSkK + dy)*NP3y8tCu);
CKOk9Z4Q(&lcdBuf[(UwJNuSkK + dy)*NP3y8tCu], 0xFF, -dy*NP3y8tCu);
} } else
{ if (h8iL9Zij < dx || dx < -h8iL9Zij)
dx %= h8iL9Zij; if (UwJNuSkK < dy || dy < -UwJNuSkK)
dy %= UwJNuSkK; if (dx > 0) 
{ for (N3jRR8ZR = 0; N3jRR8ZR < UwJNuSkK; N3jRR8ZR++)
{ FcyUMPlI = &lcdBuf[(N3jRR8ZR + 1)*h8iL9Zij - dx];
sW4PB08i(scrollBuf, FcyUMPlI, dx); FcyUMPlI = &lcdBuf[N3jRR8ZR*h8iL9Zij];
GICEruWy(FcyUMPlI + dx, FcyUMPlI, h8iL9Zij - dx);
sW4PB08i(FcyUMPlI, scrollBuf, dx);
} } else if (dx < 0) 
{ for (N3jRR8ZR = 0; N3jRR8ZR < UwJNuSkK; N3jRR8ZR++)
{ FcyUMPlI = &lcdBuf[N3jRR8ZR*h8iL9Zij];
sW4PB08i(scrollBuf, FcyUMPlI, -dx); GICEruWy(FcyUMPlI, FcyUMPlI - dx, h8iL9Zij + dx);
FcyUMPlI = &lcdBuf[(N3jRR8ZR + 1)*h8iL9Zij + dx];
sW4PB08i(FcyUMPlI, scrollBuf, -dx); } } if (dy > 0) 
{ for (OOzmyCcI = 0; OOzmyCcI < h8iL9Zij; OOzmyCcI++)
{ FcyUMPlI = &lcdBuf[((UwJNuSkK - dy)*h8iL9Zij) + OOzmyCcI];
for (N3jRR8ZR = 0; N3jRR8ZR < dy; N3jRR8ZR++, FcyUMPlI += h8iL9Zij)
scrollBuf[N3jRR8ZR] = *FcyUMPlI; FcyUMPlI = &lcdBuf[(UwJNuSkK - 1)*h8iL9Zij + OOzmyCcI];
VUbfJ7Rp = &lcdBuf[(UwJNuSkK - dy - 1)*h8iL9Zij + OOzmyCcI];
for (N3jRR8ZR = UwJNuSkK - dy - 1; N3jRR8ZR >= 0; N3jRR8ZR--)
{ *FcyUMPlI = *VUbfJ7Rp; FcyUMPlI -= h8iL9Zij;
VUbfJ7Rp -= h8iL9Zij; } FcyUMPlI = &lcdBuf[OOzmyCcI];
for (N3jRR8ZR = 0; N3jRR8ZR < dy; N3jRR8ZR++)
{ *FcyUMPlI = scrollBuf[N3jRR8ZR]; FcyUMPlI += h8iL9Zij;
} } } else if (dy < 0) 
{ for (OOzmyCcI = 0; OOzmyCcI < h8iL9Zij; OOzmyCcI++)
{ FcyUMPlI = &lcdBuf[OOzmyCcI];
for (N3jRR8ZR = 0; N3jRR8ZR < -dy; N3jRR8ZR++)
{ scrollBuf[N3jRR8ZR] = *FcyUMPlI; FcyUMPlI += h8iL9Zij;
} FcyUMPlI = &lcdBuf[OOzmyCcI];
VUbfJ7Rp = &lcdBuf[-dy*h8iL9Zij + OOzmyCcI];
for (N3jRR8ZR = 0; N3jRR8ZR < UwJNuSkK + dy; N3jRR8ZR++)
{ *FcyUMPlI = *VUbfJ7Rp; FcyUMPlI += h8iL9Zij;
VUbfJ7Rp += h8iL9Zij; } FcyUMPlI = &lcdBuf[(UwJNuSkK + dy)*h8iL9Zij + OOzmyCcI];
for (N3jRR8ZR = 0; N3jRR8ZR < -dy; N3jRR8ZR++)
{ *FcyUMPlI = scrollBuf[N3jRR8ZR]; FcyUMPlI += h8iL9Zij;
} } } } }
static void hnClyY4g(ImgHdrCr256 *pImgHdr, BYTE *TB4GUKNg, BYTE OEjq6ZgK[])
{ static const int O811fHpi[] = { 0, 0, 2, 4, 16, 2, 4, 16, 256 };
static const int Z8Gi7fdg[] = { 0, 0, 6, 7, 5, 7, 9, 21, 5 };
WORD LG0dStpd; int H0Ng1GoT; pImgHdr->tr_index = 0xFFFF; 
if (S_IMG_GRAY1 <= pImgHdr->type && pImgHdr->type < S_IMG_GRAY4)
{ pImgHdr->bitmap = TB4GUKNg + Z8Gi7fdg[pImgHdr->type];
for (H0Ng1GoT = 0; H0Ng1GoT < O811fHpi[pImgHdr->type]; H0Ng1GoT += 2)
{ LG0dStpd = (OEjq6ZgK[H0Ng1GoT/2] & 0xF0) >> 4;
pImgHdr->OEjq6ZgK[H0Ng1GoT] = CzyMA07Z[LG0dStpd];
if (LG0dStpd == S_TRANSPARENT) pImgHdr->tr_index = H0Ng1GoT;
LG0dStpd = OEjq6ZgK[H0Ng1GoT/2] & 0x0F; pImgHdr->OEjq6ZgK[H0Ng1GoT + 1] = CzyMA07Z[LG0dStpd];
if (LG0dStpd == S_TRANSPARENT) pImgHdr->tr_index = H0Ng1GoT + 1;
} } else if (pImgHdr->type == S_IMG_GRAY4)
{ pImgHdr->bitmap = TB4GUKNg + Z8Gi7fdg[pImgHdr->type];
for (H0Ng1GoT = 0; H0Ng1GoT < 16; H0Ng1GoT++)
{ pImgHdr->OEjq6ZgK[H0Ng1GoT] = CzyMA07Z[H0Ng1GoT];
if (H0Ng1GoT == S_TRANSPARENT) pImgHdr->tr_index = H0Ng1GoT;
} } else if (S_IMG_COLOR1 <= pImgHdr->type && pImgHdr->type < S_IMG_COLOR8)
{ pImgHdr->bitmap = TB4GUKNg + Z8Gi7fdg[pImgHdr->type];
for (H0Ng1GoT = 0; H0Ng1GoT < O811fHpi[pImgHdr->type]; H0Ng1GoT++)
{ pImgHdr->OEjq6ZgK[H0Ng1GoT] = CzyMA07Z[OEjq6ZgK[H0Ng1GoT]];
if (OEjq6ZgK[H0Ng1GoT] == S_TRANSPARENT) pImgHdr->tr_index = H0Ng1GoT;
} } else if (pImgHdr->type == S_IMG_COLOR8)
{ pImgHdr->bitmap = TB4GUKNg + Z8Gi7fdg[pImgHdr->type];
for (H0Ng1GoT = 0; H0Ng1GoT < S_MAX_COLOR; H0Ng1GoT++)
{ pImgHdr->OEjq6ZgK[H0Ng1GoT] = CzyMA07Z[H0Ng1GoT];
if (H0Ng1GoT == S_TRANSPARENT) pImgHdr->tr_index = H0Ng1GoT;
} } }
static void iW0pdjQP(ImgHdrCr256 *pImgHdr)
{ BYTE *OEjq6ZgK = pImgHdr->OEjq6ZgK; 
WORD tr_index = pImgHdr->tr_index; 
int cx = pImgHdr->LbPt5vw8; 
int cy = pImgHdr->y; 
int qm7J64q3 = pImgHdr->qm7J64q3; 
int h = pImgHdr->h; 
int w0 = qm7J64q3; 
int IsDSC069 = 0, bDefoJ6l = 0; 
int clipSkipByte; 
int clipSkipBit; 
BYTE dotIndex; 
BYTE dotColor; 
BYTE *XBx7hZIP, *FcyUMPlI; 
BYTE *r2Z9u4o4; 
int imgShift; 
int LbPt5vw8, y; 
if (!JdHT2n1Q(&IsDSC069, &bDefoJ6l, &qm7J64q3, &h, &cx, &cy)) 
return; XBx7hZIP = JZagjmLi + cy*NP3y8tCu + cx; 
r2Z9u4o4 = pImgHdr->bitmap + ((bDefoJ6l*w0 + IsDSC069) >> 3); 
clipSkipByte = ((w0 - qm7J64q3) >> 3); 
clipSkipBit = (w0 - qm7J64q3) & 0x07; 
imgShift = (bDefoJ6l*w0 + IsDSC069) & 0x07; 
for (y = 0; y < h; y++) { FcyUMPlI = XBx7hZIP;
for (LbPt5vw8 = 0; LbPt5vw8 < qm7J64q3; LbPt5vw8++)
{ dotIndex = (*r2Z9u4o4 >> (7 - imgShift)) & 0x01; 
if (dotIndex != tr_index) 
{ dotColor = OEjq6ZgK[dotIndex]; *FcyUMPlI = dotColor;
} FcyUMPlI++; 
imgShift++; 
if (imgShift >= 8) { r2Z9u4o4++; imgShift = 0;
} } XBx7hZIP += NP3y8tCu; 
r2Z9u4o4 += clipSkipByte; 
imgShift += clipSkipBit; if (imgShift >= 8)
{ r2Z9u4o4 += (imgShift) >> 3; imgShift = imgShift & 0x07;
} } }
static void pohX7Er3(ImgHdrCr256 *pImgHdr)
{ BYTE *OEjq6ZgK = pImgHdr->OEjq6ZgK; 
WORD tr_index = pImgHdr->tr_index; 
int cx = pImgHdr->LbPt5vw8; 
int cy = pImgHdr->y; 
int qm7J64q3 = pImgHdr->qm7J64q3; 
int h = pImgHdr->h; 
int w0 = qm7J64q3; 
int IsDSC069 = 0, bDefoJ6l = 0; 
int clipSkipByte; 
int clipSkipBit; 
BYTE dotIndex; 
BYTE dotColor; 
BYTE *XBx7hZIP, *FcyUMPlI; 
BYTE *r2Z9u4o4; 
int imgShift; 
int LbPt5vw8, y; 
if (!JdHT2n1Q(&IsDSC069, &bDefoJ6l, &qm7J64q3, &h, &cx, &cy)) 
return; XBx7hZIP = JZagjmLi + cy*NP3y8tCu + cx; 
r2Z9u4o4 = pImgHdr->bitmap + ((bDefoJ6l*w0 + IsDSC069) >> 2); 
clipSkipByte = ((w0 - qm7J64q3) >> 2); 
clipSkipBit = ((w0 - qm7J64q3) & 0x03) << 1; 
imgShift = ((bDefoJ6l*w0 + IsDSC069) << 1) & 0x07; 
for (y = 0; y < h; y++) { FcyUMPlI = XBx7hZIP;
for (LbPt5vw8 = 0; LbPt5vw8 < qm7J64q3; LbPt5vw8++)
{ dotIndex = (*r2Z9u4o4 >> (6 - imgShift)) & 0x03; 
if (dotIndex != tr_index) 
{ dotColor = OEjq6ZgK[dotIndex]; *FcyUMPlI = dotColor;
} FcyUMPlI++; 
imgShift += 2; 
if (imgShift >= 8) { r2Z9u4o4++; imgShift = 0;
} } XBx7hZIP += NP3y8tCu; 
r2Z9u4o4 += clipSkipByte; 
imgShift += clipSkipBit; if (imgShift >= 8)
{ r2Z9u4o4 += (imgShift) >> 3; imgShift = imgShift & 0x07;
} } }
static void jGtO1FB9(ImgHdrCr256 *pImgHdr)
{ BYTE *OEjq6ZgK = pImgHdr->OEjq6ZgK; 
WORD tr_index = pImgHdr->tr_index; 
int cx = pImgHdr->LbPt5vw8; 
int cy = pImgHdr->y; 
int qm7J64q3 = pImgHdr->qm7J64q3; 
int h = pImgHdr->h; 
int w0 = qm7J64q3; 
int IsDSC069 = 0, bDefoJ6l = 0; 
int clipSkipByte; 
int clipSkipBit; 
BYTE dotIndex; 
BYTE dotColor; 
BYTE *XBx7hZIP, *FcyUMPlI; 
BYTE *r2Z9u4o4; 
int imgShift; 
int LbPt5vw8, y; 
if (!JdHT2n1Q(&IsDSC069, &bDefoJ6l, &qm7J64q3, &h, &cx, &cy)) 
return; XBx7hZIP = JZagjmLi + cy*NP3y8tCu + cx; 
r2Z9u4o4 = pImgHdr->bitmap + ((bDefoJ6l*w0 + IsDSC069) >> 1); 
clipSkipByte = ((w0 - qm7J64q3) >> 1); 
clipSkipBit = ((w0 - qm7J64q3) & 0x00000001) << 2; 
imgShift = ((bDefoJ6l*w0 + IsDSC069) << 2) & 0x07; 
for (y = 0; y < h; y++) { FcyUMPlI = XBx7hZIP;
for (LbPt5vw8 = 0; LbPt5vw8 < qm7J64q3; LbPt5vw8++)
{ dotIndex = (*r2Z9u4o4 >> (4 - imgShift)) & 0x0F; 
if (dotIndex != tr_index) 
{ dotColor = OEjq6ZgK[dotIndex]; *FcyUMPlI = dotColor;
} FcyUMPlI++; 
imgShift += 4; 
if (imgShift >= 8) { r2Z9u4o4++; imgShift = 0;
} } XBx7hZIP += NP3y8tCu; 
r2Z9u4o4 += clipSkipByte; 
imgShift += clipSkipBit; if (imgShift >= 8)
{ r2Z9u4o4 += (imgShift) >> 3; imgShift = imgShift & 0x07;
} } }
static void RVhGK7nm(ImgHdrCr256 *pImgHdr)
{ BYTE *OEjq6ZgK = pImgHdr->OEjq6ZgK; 
WORD tr_index = pImgHdr->tr_index; 
int cx = pImgHdr->LbPt5vw8; 
int cy = pImgHdr->y; 
int qm7J64q3 = pImgHdr->qm7J64q3; 
int h = pImgHdr->h; 
int w0 = qm7J64q3; 
int IsDSC069 = 0, bDefoJ6l = 0; 
int clipSkipByte; 
BYTE dotIndex; 
BYTE dotColor; 
BYTE *XBx7hZIP, *FcyUMPlI; 
BYTE *r2Z9u4o4; 
int LbPt5vw8, y; 
if (!JdHT2n1Q(&IsDSC069, &bDefoJ6l, &qm7J64q3, &h, &cx, &cy)) 
return; XBx7hZIP = JZagjmLi + cy*NP3y8tCu + cx; 
r2Z9u4o4 = pImgHdr->bitmap + (bDefoJ6l*w0 + IsDSC069); 
clipSkipByte = (w0 - qm7J64q3); 
for (y = 0; y < h; y++) { FcyUMPlI = XBx7hZIP;
for (LbPt5vw8 = 0; LbPt5vw8 < qm7J64q3; LbPt5vw8++)
{ dotIndex = *r2Z9u4o4; 
if (dotIndex != tr_index) 
{ dotColor = OEjq6ZgK[dotIndex]; *FcyUMPlI = dotColor;
} FcyUMPlI++; 
r2Z9u4o4++; 
} XBx7hZIP += NP3y8tCu; 
r2Z9u4o4 += clipSkipByte; 
} }
static void IOd5DYzC(ImgHdrCr256 *pImgHdr)
{ BYTE *OEjq6ZgK = pImgHdr->OEjq6ZgK; 
WORD tr_index = pImgHdr->tr_index; 
int cx = pImgHdr->LbPt5vw8; 
int cy = pImgHdr->y; 
int qm7J64q3 = pImgHdr->qm7J64q3; 
int h = pImgHdr->h; 
int w0 = qm7J64q3; 
int IsDSC069 = 0, bDefoJ6l = 0; 
int clipSkipByte; 
int clipSkipBit; 
BYTE dotIndex; 
BYTE dotColor; 
BYTE *XBx7hZIP, *FcyUMPlI; 
BYTE *r2Z9u4o4; 
int imgShift; 
int LbPt5vw8, y; 
if (!v9V2Pnjk(&IsDSC069, &bDefoJ6l, &qm7J64q3, &h, &cx, &cy)) 
return; XBx7hZIP = JZagjmLi + cy*NP3y8tCu + (cx + qm7J64q3 - 1); 
r2Z9u4o4 = pImgHdr->bitmap + ((bDefoJ6l*w0 + IsDSC069) >> 3); 
clipSkipByte = ((w0 - qm7J64q3) >> 3); 
clipSkipBit = (w0 - qm7J64q3) & 0x07; 
imgShift = (bDefoJ6l*w0 + IsDSC069) & 0x07; 
for (y = 0; y < h; y++) { FcyUMPlI = XBx7hZIP;
for (LbPt5vw8 = 0; LbPt5vw8 < qm7J64q3; LbPt5vw8++)
{ dotIndex = (*r2Z9u4o4 >> (7 - imgShift)) & 0x01; 
if (dotIndex != tr_index) 
{ dotColor = OEjq6ZgK[dotIndex]; *FcyUMPlI = dotColor;
} FcyUMPlI--; 
imgShift++; 
if (imgShift >= 8) { r2Z9u4o4++; imgShift = 0;
} } XBx7hZIP += NP3y8tCu; 
r2Z9u4o4 += clipSkipByte; 
imgShift += clipSkipBit; if (imgShift >= 8)
{ r2Z9u4o4 += (imgShift) >> 3; imgShift = imgShift & 0x07;
} } }
static void VJ9k9RQN(ImgHdrCr256 *pImgHdr)
{ BYTE *OEjq6ZgK = pImgHdr->OEjq6ZgK; 
WORD tr_index = pImgHdr->tr_index; 
int cx = pImgHdr->LbPt5vw8; 
int cy = pImgHdr->y; 
int qm7J64q3 = pImgHdr->qm7J64q3; 
int h = pImgHdr->h; 
int w0 = qm7J64q3; 
int IsDSC069 = 0, bDefoJ6l = 0; 
int clipSkipByte; 
int clipSkipBit; 
BYTE dotIndex; 
BYTE dotColor; 
BYTE *XBx7hZIP, *FcyUMPlI; 
BYTE *r2Z9u4o4; 
int imgShift; 
int LbPt5vw8, y; 
if (!v9V2Pnjk(&IsDSC069, &bDefoJ6l, &qm7J64q3, &h, &cx, &cy)) 
return; XBx7hZIP = JZagjmLi + cy*NP3y8tCu + (cx + qm7J64q3 - 1); 
r2Z9u4o4 = pImgHdr->bitmap + ((bDefoJ6l*w0 + IsDSC069) >> 2); 
clipSkipByte = ((w0 - qm7J64q3) >> 2); 
clipSkipBit = ((w0 - qm7J64q3) & 0x03) << 1; 
imgShift = ((bDefoJ6l*w0 + IsDSC069) << 1) & 0x07; 
for (y = 0; y < h; y++) { FcyUMPlI = XBx7hZIP;
for (LbPt5vw8 = 0; LbPt5vw8 < qm7J64q3; LbPt5vw8++)
{ dotIndex = (*r2Z9u4o4 >> (6 - imgShift)) & 0x03; 
if (dotIndex != tr_index) 
{ dotColor = OEjq6ZgK[dotIndex]; *FcyUMPlI = dotColor;
} FcyUMPlI--; 
imgShift += 2; 
if (imgShift >= 8) { r2Z9u4o4++; imgShift = 0;
} } XBx7hZIP += NP3y8tCu; 
r2Z9u4o4 += clipSkipByte; 
imgShift += clipSkipBit; if (imgShift >= 8)
{ r2Z9u4o4 += (imgShift) >> 3; imgShift = imgShift & 0x07;
} } }
static void M1P1NHy9(ImgHdrCr256 *pImgHdr)
{ BYTE *OEjq6ZgK = pImgHdr->OEjq6ZgK; 
WORD tr_index = pImgHdr->tr_index; 
int cx = pImgHdr->LbPt5vw8; 
int cy = pImgHdr->y; 
int qm7J64q3 = pImgHdr->qm7J64q3; 
int h = pImgHdr->h; 
int w0 = qm7J64q3; 
int IsDSC069 = 0, bDefoJ6l = 0; 
int clipSkipByte; 
int clipSkipBit; 
BYTE dotIndex; 
BYTE dotColor; 
BYTE *XBx7hZIP, *FcyUMPlI; 
BYTE *r2Z9u4o4; 
int imgShift; 
int LbPt5vw8, y; 
if (!v9V2Pnjk(&IsDSC069, &bDefoJ6l, &qm7J64q3, &h, &cx, &cy)) 
return; XBx7hZIP = JZagjmLi + cy*NP3y8tCu + (cx + qm7J64q3 - 1); 
r2Z9u4o4 = pImgHdr->bitmap + ((bDefoJ6l*w0 + IsDSC069) >> 1); 
clipSkipByte = ((w0 - qm7J64q3) >> 1); 
clipSkipBit = ((w0 - qm7J64q3) & 0x01) << 2; 
imgShift = ((bDefoJ6l*w0 + IsDSC069) & 0x01) << 2; 
for (y = 0; y < h; y++) { FcyUMPlI = XBx7hZIP;
for (LbPt5vw8 = 0; LbPt5vw8 < qm7J64q3; LbPt5vw8++)
{ dotIndex = (*r2Z9u4o4 >> (4 - imgShift)) & 0x0F; 
if (dotIndex != tr_index) 
{ dotColor = OEjq6ZgK[dotIndex]; *FcyUMPlI = dotColor;
} FcyUMPlI--; 
imgShift += 4; 
if (imgShift >= 8) { r2Z9u4o4++; imgShift = 0;
} } XBx7hZIP += NP3y8tCu; 
r2Z9u4o4 += clipSkipByte; 
imgShift += clipSkipBit; if (imgShift >= 8)
{ r2Z9u4o4 += (imgShift) >> 3; imgShift = imgShift & 0x07;
} } }
static void wdYZBfxC(ImgHdrCr256 *pImgHdr)
{ BYTE *OEjq6ZgK = pImgHdr->OEjq6ZgK; 
WORD tr_index = pImgHdr->tr_index; 
int cx = pImgHdr->LbPt5vw8; 
int cy = pImgHdr->y; 
int qm7J64q3 = pImgHdr->qm7J64q3; 
int h = pImgHdr->h; 
int w0 = qm7J64q3; 
int IsDSC069 = 0, bDefoJ6l = 0; 
int clipSkipByte; 
BYTE dotIndex; 
BYTE dotColor; 
BYTE *XBx7hZIP, *FcyUMPlI; 
BYTE *r2Z9u4o4; 
int LbPt5vw8, y; 
if (!v9V2Pnjk(&IsDSC069, &bDefoJ6l, &qm7J64q3, &h, &cx, &cy)) 
return; XBx7hZIP = JZagjmLi + cy*NP3y8tCu + (cx + qm7J64q3 - 1); 
r2Z9u4o4 = pImgHdr->bitmap + (bDefoJ6l*w0 + IsDSC069); 
clipSkipByte = (w0 - qm7J64q3); 
for (y = 0; y < h; y++) { FcyUMPlI = XBx7hZIP;
for (LbPt5vw8 = 0; LbPt5vw8 < qm7J64q3; LbPt5vw8++)
{ dotIndex = *r2Z9u4o4; if (dotIndex != tr_index) 
{ dotColor = OEjq6ZgK[dotIndex]; *FcyUMPlI = dotColor;
} FcyUMPlI--; 
r2Z9u4o4++; 
} XBx7hZIP += NP3y8tCu; 
r2Z9u4o4 += clipSkipByte; 
} }
void mil_CopyImage(BYTE* TB4GUKNg, int LbPt5vw8, int y)
{ ImgHdrCr256 imgHdr; if (S_IMG_GRAY1 <= VDI_TYPE(TB4GUKNg) && VDI_TYPE(TB4GUKNg) <= S_IMG_COLOR8)
{ imgHdr.type = VDI_TYPE(TB4GUKNg); imgHdr.qm7J64q3 = VDI_WIDTH(TB4GUKNg);
imgHdr.h = VDI_HEIGHT(TB4GUKNg); imgHdr.LbPt5vw8 = LbPt5vw8 - VDI_CX(TB4GUKNg);
imgHdr.y = y - VDI_CY(TB4GUKNg); if (imgHdr.type < S_IMG_TC1)
hnClyY4g(&imgHdr, TB4GUKNg, VDI_PAL_PTR(TB4GUKNg));
else hnClyY4g(&imgHdr, TB4GUKNg, VDI_TCPAL_PTR(TB4GUKNg));
SZysP4qw[imgHdr.type - S_IMG_GRAY1](&imgHdr);
} } void mil_CopyImageDir(BYTE* TB4GUKNg, int LbPt5vw8, int y, int dir)
{ ImgHdrCr256 imgHdr; if (S_IMG_GRAY1 <= VDI_TYPE(TB4GUKNg) && VDI_TYPE(TB4GUKNg) <= S_IMG_COLOR8)
{ imgHdr.type = VDI_TYPE(TB4GUKNg); imgHdr.qm7J64q3 = VDI_WIDTH(TB4GUKNg);
imgHdr.h = VDI_HEIGHT(TB4GUKNg); imgHdr.LbPt5vw8 = (dir == 0) ? LbPt5vw8 - VDI_CX(TB4GUKNg) : LbPt5vw8 - imgHdr.qm7J64q3 + VDI_CX(TB4GUKNg);
imgHdr.y = y - VDI_CY(TB4GUKNg); if (imgHdr.type < S_IMG_TC1)
hnClyY4g(&imgHdr, TB4GUKNg, VDI_PAL_PTR(TB4GUKNg));
else hnClyY4g(&imgHdr, TB4GUKNg, VDI_TCPAL_PTR(TB4GUKNg));
if (dir == 0) SZysP4qw[imgHdr.type - S_IMG_GRAY1](&imgHdr);
else inTEQRbH[imgHdr.type - S_IMG_GRAY1](&imgHdr);
} }
void mil_CopyImagePal(BYTE* TB4GUKNg, int LbPt5vw8, int y, BYTE *OEjq6ZgK)
{ ImgHdrCr256 imgHdr; if (S_IMG_GRAY1 <= VDI_TYPE(TB4GUKNg) && VDI_TYPE(TB4GUKNg) <= S_IMG_COLOR8)
{ imgHdr.type = VDI_TYPE(TB4GUKNg); imgHdr.qm7J64q3 = VDI_WIDTH(TB4GUKNg);
imgHdr.h = VDI_HEIGHT(TB4GUKNg); imgHdr.LbPt5vw8 = LbPt5vw8 - VDI_CX(TB4GUKNg);
imgHdr.y = y - VDI_CY(TB4GUKNg); hnClyY4g(&imgHdr, TB4GUKNg, OEjq6ZgK);
SZysP4qw[imgHdr.type - S_IMG_GRAY1](&imgHdr);
} }
void mil_CopyImageDirPal(BYTE* TB4GUKNg, int LbPt5vw8, int y, int dir, BYTE *OEjq6ZgK)
{ ImgHdrCr256 imgHdr; if (S_IMG_GRAY1 <= VDI_TYPE(TB4GUKNg) && VDI_TYPE(TB4GUKNg) <= S_IMG_COLOR8)
{ imgHdr.type = VDI_TYPE(TB4GUKNg); imgHdr.qm7J64q3 = VDI_WIDTH(TB4GUKNg);
imgHdr.h = VDI_HEIGHT(TB4GUKNg); imgHdr.LbPt5vw8 = (dir == 0) ? LbPt5vw8 - VDI_CX(TB4GUKNg) : LbPt5vw8 - imgHdr.qm7J64q3 + VDI_CX(TB4GUKNg);
imgHdr.y = y - VDI_CY(TB4GUKNg); hnClyY4g(&imgHdr, TB4GUKNg, OEjq6ZgK);
if (dir == 0) SZysP4qw[imgHdr.type - S_IMG_GRAY1](&imgHdr);
else inTEQRbH[imgHdr.type - S_IMG_GRAY1](&imgHdr);
} } 
#endif 

#endif 
