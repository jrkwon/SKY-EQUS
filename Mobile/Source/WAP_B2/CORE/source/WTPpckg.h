/*
 * Copyright (C) Ericsson Mobile Communications AB, 2000.
 * Licensed to AU-System AB.
 * All rights reserved.
 *
 * This software is covered by the license agreement between
 * the end user and AU-System AB, and may be used and copied
 * only in accordance with the terms of the said agreement.
 *
 * Neither Ericsson Mobile Communications AB nor AU-System AB
 * assumes any responsibility or liability for any errors or inaccuracies in
 * this software, or any consequential, incidental or indirect damage arising
 * out of the use of the Generic WAP Client software.
 */

/* Program generated by SDT Cmicro, version 1.33 */

#ifndef XSCT_CMICRO
#define XSCT_CMICRO
#endif

#ifndef XX_WTPpckg_H
#define XX_WTPpckg_H

/*************************************************************************
**                SECTION Types and Forward references                  **
*************************************************************************/

/*****
* SYNONYM TR_INITIATOR
* <<PACKAGE WTPpckg>>
* #SDTREF(SDL,D:\WIP\Maintenance\WAP_1.1\System\base_co\sdl\packages\WTPpckg.sun(1),122(40,100),2)
******/
#define TR_INITIATOR SDL_INTEGER_LIT(1)

/*****
* SYNONYM TR_RESPONDER
* <<PACKAGE WTPpckg>>
* #SDTREF(SDL,D:\WIP\Maintenance\WAP_1.1\System\base_co\sdl\packages\WTPpckg.sun(1),122(40,100),3)
******/
#define TR_RESPONDER SDL_INTEGER_LIT(2)

/*****
* NEWTYPE TransactionType  (TYPE section)
* <<PACKAGE WTPpckg>>
* #SDTREF(SDL,D:\WIP\Maintenance\WAP_1.1\System\base_co\sdl\packages\WTPpckg.sun(1),119(40,55),1)
******/
typedef struct TransactionType_s {
    SDL_Natural  dir;
    SDL_Natural  tid;
    SDL_Integer  handle;
    SDL_PId  pid;
    AddressType  clientAddress;
    AddressType  serverAddress;
} TransactionType;

/*****
* NEWTYPE TransactionType  (HEADING section)
* <<PACKAGE WTPpckg>>
* #SDTREF(SDL,D:\WIP\Maintenance\WAP_1.1\System\base_co\sdl\packages\WTPpckg.sun(1),119(40,55),1)
******/

#define yAssF_TransactionType(V,E,A)  V = E
extern void yDef_TransactionType XPP(( TransactionType * ));
#define yEqF_TransactionType(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_TransactionType(Expr1,Expr2)  (Expr1) != (Expr2)
extern TransactionType yMake_TransactionType XPP(( SDL_Natural, SDL_Natural,
  SDL_Integer, SDL_PId, AddressType, AddressType ));
#ifndef ANY_TransactionType
#define ANY_TransactionType  yMake_TransactionType(ANY_SDL_Natural, \
  ANY_SDL_Natural, ANY_SDL_Integer, ANY_SDL_PId, ANY_AddressType, \
  ANY_AddressType)
#endif
#define z_WTPpckg_03_copy(P)  P

/*************************************************************************
**                #CODE directives, #HEADING sections                   **
*************************************************************************/
#endif
